<%- include('../layouts/header.ejs') -%>
    <style>
        .coupon-item {
            display: flex;
            align-items: center;
            margin-bottom: 2px;
        }

        .coupon-code {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-right: 10px;
        }

        .apply-button {
            padding: 8px 12px;
            background-color: #4caf50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .apply-button:hover {
            background-color: #45a049;
        }
    </style>



    <!-- Quick view -->
    <div class="modal fade custom-modal" id="quickViewModal" tabindex="-1" aria-labelledby="quickViewModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            <div class="detail-gallery">
                                <span class="zoom-icon"><i class="fi-rs-search"></i></span>
                                <!-- MAIN SLIDES -->
                                <div class="product-image-slider">
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-2.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-1.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-3.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-4.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-5.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-6.jpg" alt="product image">
                                    </figure>
                                    <figure class="border-radius-10">
                                        <img src="assets/imgs/shop/product-16-7.jpg" alt="product image">
                                    </figure>
                                </div>
                                <!-- THUMBNAILS -->
                                <div class="slider-nav-thumbnails pl-15 pr-15">
                                    <div><img src="assets/imgs/shop/thumbnail-3.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-4.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-5.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-6.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-7.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-8.jpg" alt="product image"></div>
                                    <div><img src="assets/imgs/shop/thumbnail-9.jpg" alt="product image"></div>
                                </div>
                            </div>
                            <!-- End Gallery -->

                        </div>

                        <!-- Detail Info -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    <header class="header-area header-style-4 header-height-2">
        <div class="header-top header-top-ptb-1 d-none d-lg-block">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-xl-3 col-lg-4">
                        <div class="header-info">
                            <ul>
                                <li><i class="fi-rs-smartphone"></i> <a href="#">(+01) - 2345 - 6789</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-xl-6 col-lg-4">
                        <div class="text-center">
                            <div id="news-flash" class="d-inline-block">
                                <ul>
                                    <li>Get great Books up to 50% off <a href="shop-grid-right.html">View details</a>
                                    </li>
                                    <li>Supper Value Deals - Save more with coupons</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-4">
                        <div class="header-info header-info-right">
                            <ul>
                                <li>
                                    <a class="language-dropdown-active" href="#"> <i class="fi-rs-world"></i> English <i
                                            class="fi-rs-angle-small-down"></i></a>
                                    <ul class="language-dropdown">
                                        <li><a href="#"><img src="assets/imgs/theme/flag-fr.png" alt="">Français</a>
                                        </li>
                                        <li><a href="#"><img src="assets/imgs/theme/flag-dt.png" alt="">Deutsch</a></li>
                                        <li><a href="#"><img src="assets/imgs/theme/flag-ru.png" alt="">Pусский</a></li>
                                    </ul>
                                </li>
                                <li><!-- In your navigation bar or header section -->

                                    <% if (user) { %>
                                        <!-- If user is logged in, show logout button -->
                                <li><a href="/logout">Logout</a></li>
                                <% } else { %>
                                    <!-- If user is not logged in, show login button -->
                                    <li><a href="/login">Log In / Sign Up</a></li>
                                    <% } %>

                                        </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="header-middle header-middle-ptb-1 d-none d-lg-block" style="background: white;">
            <div class="container">
                <div class="container">
                    <div class="header-wrap">
                        <div class="logo logo-width-1">
                            <a href="index.html"><img src="assets/imgs/theme/icons/homelogo.jpeg" alt="logo"></a>
                            <h2 style="font-size: 23px;margin-top: -38px; padding-bottom: 19px;">BookStore</h2>
                        </div>
                        <div class="header-right">
                            <div class="search-style-2">
                                <div class="search-style-2">
                                    <form class="d-flex justify-content-between">
                                        <!-- This input field is initially hidden -->
                                        <input type="text" name="search" class="form-control" id="search_input"
                                            placeholder="Search Here" style="display: none;">
                                        <!-- <input type="submit"> -->
                                        <span id="close_search" title="Close Search"></span>
                                    </form>
                                    <div class="header-action-right">
                                        <div class="header-action-2">
                                            <div class="header-action-icon-2">
                                                <a href="/wishlist">
                                                    <img class="svgInject" alt="Evara"
                                                        src="assets/imgs/theme/icons/icon-heart.svg">
                                                </a>
                                            </div>
                                            <div class="header-action-icon-2">
                                                <a class="mini-cart-icon" href="/cart">
                                                    <img alt="Evara" src="assets/imgs/theme/icons/icon-cart.svg">
                                                </a>

                                            </div>
                                            <div class="nav-item "><a class="nav-link" href="/account"><i
                                                        class="fas fa-user"></i></a></div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="header-bottom header-bottom-bg-color sticky-bar" style="background: whitesmoke;">
                        <div class="container">
                            <div class="header-wrap header-space-between position-relative">
                                <div class="logo logo-width-1 d-block d-lg-none">
                                    <a href="index.html"><img src="assets/imgs/theme/logo.svg" alt="logo"></a>
                                </div>
                                <div class="header-nav d-none d-lg-flex">

                                    <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block"
                                        style="margin-left: 300px;">
                                        <nav>
                                            <ul>
                                                <li><a href="/">Home </a>
                                                </li>
                                                <li>
                                                    <a href="/product">All Books</a>
                                                </li>

                                                <!-- <li class="position-static"><a href="#">All Categories </a>
                                    
                                </li> -->
                                                <li><a href="/account">Account</a>

                                                </li>

                                                <li>
                                                    <a href="/payment-policy">Privacy-policy</a>
                                                </li>
                                            </ul>
                                        </nav>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
    </header>
    <div class="mobile-header-active mobile-header-wrapper-style">
        <div class="mobile-header-wrapper-inner">
            <div class="mobile-header-top">
                <div class="mobile-header-logo">
                    <a href="index.html"><img src="assets/imgs/theme/logo.svg" alt="logo"></a>
                </div>
                <div class="mobile-menu-close close-style-wrap close-style-position-inherit">
                    <!-- <button class="close-style search-close">
                    <i class="icon-top"></i>
                    <i class="icon-bottom"></i>
                </button> -->
                </div>
            </div>
            <div class="mobile-header-content-area">
                <div class="mobile-search search-style-3 mobile-header-border">
                    <!-- <form action="#">
                    <input type="text" placeholder="Search for items…">
                    <button type="submit"><i class="fi-rs-search"></i></button>
                </form> -->
                </div>
                <div class="mobile-menu-wrap mobile-header-border">
                    <div class="main-categori-wrap mobile-header-border">
                        <a class="categori-button-active-2" href="#">
                            <span class="fi-rs-apps"></span> Browse Categories
                        </a>
                        <div class="categori-dropdown-wrap categori-dropdown-active-small">
                            <ul>
                                <% if(categories.length> 0) { %>
                                    <% for(let i=0; i<categories.length; i++) { %>
                                        <% let category=categories[i]; %>
                                            <li class="has-children">
                                                <a href="shop-grid-right.html">
                                                    <%= category.name %>
                                                </a>
                                            </li>
                                            <% } %>
                                                <% } %>

                            </ul>
                        </div>
                    </div>
                    <!-- mobile menu start -->
                    <nav>
                        <ul class="mobile-menu">
                            <li class="menu-item-has-children"><span class="menu-expand"></span><a href="/">Home</a>

                            </li>
                            <li class="menu-item-has-children"><span class="menu-expand"></span><a
                                    href="shop-grid-right.html">shop</a>

                            </li>

                        </ul>
                        </li>




                        </ul>
                    </nav>
                    <!-- mobile menu end -->
                </div>
                <div class="mobile-header-info-wrap mobile-header-border">

                    <div class="single-mobile-header-info">
                        <a href="page-login-register.html">Log In / Sign Up </a>
                    </div>
                    <div class="single-mobile-header-info">
                        <a href="#">(+01) - 2345 - 6789 </a>
                    </div>
                </div>
                <div class="mobile-social-icon">
                    <h5 class="mb-15 text-grey-4">Follow Us</h5>
                    <a href="#"><img src="assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                    <a href="#"><img src="assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                    <a href="#"><img src="assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                    <a href="#"><img src="assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                    <a href="#"><img src="assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
                </div>
            </div>
        </div>
    </div>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">

                    <div class="check_title" id="couponTitle">
                        <h2><button id="showModal" class="btn btn-warning">Coupons</button></h2>
                    </div>
                    <div class="modal" id="blankModal">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Coupons</h5>
                                    <button type="button" class="close" id="closeModal">&times;</button>
                                </div>
                                <div class="modal-body">
                                    <% if(couponData && couponData.length> 0) { %>
                                        <% for (let i=0; i < couponData.length; i++) { %>
                                            <div class="coupon-item">
                                                <input type="text" value="<%= couponData[i].couponCode %>" readonly
                                                    class="coupon-code">
                                            </div>
                                            <% } %>
                                                <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="text" id="couponInput" placeholder="Enter coupon code">
                    <button class="tp_btn" onclick="applyCoupon()">Apply Coupon</button>

                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="divider mt-50 mb-50"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h3>Billing Details</h3>
                        <div class="payment-options">
                            <% const maxAddressesToShow=2; %>
                                <% if (userData && userData.address && userData.address.length> 0) { %>
                                    <% for (let i=userData.address.length - 1; i>= 0 && i >= userData.address.length -
                                        maxAddressesToShow; i--) { %>
                                        <form id="addressForm<%= i %>"
                                            class="<%= i >= maxAddressesToShow ? 'hidden' : '' %>">
                                            <input class="form-check-input" type="hidden" id="userId<%= i %>"
                                                value="<%= i %>">
                                            <div class="payment-options">
                                                <label class="payment-item form-check-label" for="f-option<%= i %>">
                                                    <input class="form-check-input" type="radio" id="f-option<%= i %>"
                                                        name="payment" value="<%= i %>" <%=i===userData.address.length -
                                                        1 ? 'checked' : '' %>>
                                                    <div class="box">
                                                        <div class="circle"></div>
                                                        <div class="address-details">
                                                            <input type="hidden" value="<%= i %>">
                                                            <h6 class="mr-5">Address <%= i + 1 %>:</h6>
                                                            <p>
                                                                <%= userData.address[i].firstName %>,
                                                            </p>
                                                            <p>
                                                                <%= userData.address[i].City %>,
                                                            </p>
                                                            <p>
                                                                <%= userData.address[i].District %>,
                                                            </p>
                                                            <p>
                                                                <%= userData.address[i].State %>,
                                                            </p>
                                                            <p>
                                                                <%= userData.address[i].Pincode %>,
                                                            </p>
                                                            <div class="d-flex justify-content-end align-items-end">
                                                                <p class="mb-0"><a
                                                                        href="/editAddress?index=<%=i%>">Edit</a></p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        </form>
                                        <% } %>
                                            <% } else { %>
                                                <% } %>
                        </div>
                        <button id="toggleFormButton" class="btn btn-warning mt-5" data-bs-toggle="modal"
                            data-bs-target="#exampleModal">Add address</button>
                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <form class="contact_form" id="myForm" action="/checkout" method="POST"
                                            onsubmit="return validateForm()">
                                            <div class="mb-3">
                                                <label for="first" class="form-label">First name</label>
                                                <input type="text" class="form-control" id="first" name="fname">
                                                <span id="firstError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="last" class="form-label">Last name</label>
                                                <input type="text" class="form-control" id="last" name="lname">
                                                <span id="lastError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="city" class="form-label">City/Town</label>
                                                <input type="text" class="form-control" id="city" name="city">
                                                <span id="cityError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="district" class="form-label">District</label>
                                                <input type="text" class="form-control" id="district" name="district">
                                                <span id="districtError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="state" class="form-label">State</label>
                                                <input type="text" class="form-control" id="state" name="state">
                                                <span id="stateError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <label for="pincode" class="form-label">Pincode</label>
                                                <input type="text" class="form-control" id="zip" name="pincode">
                                                <span id="pincodeError" class="text-danger"></span>
                                            </div>
                                            <div class="mb-3">
                                                <button type="submit" class="btn btn-warning">Submit</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <% if(cartData && cartData.product && cartData.product.length> 0) { %>
                                                <% cartData.product.forEach(productItem=> { %>
                                                    <td class="image product-thumbnail"> <a
                                                            href="/product?id=<%= productItem.productId._id %>">
                                                            <img src="/productimages/<%= productItem.productId.image[0] %>"
                                                                alt="">
                                                        </a></td>
                                                    <td>
                                                        <h5><a href="shop-product-full.html">
                                                                <%= productItem.productId.name %>
                                                            </a></h5> <span class="middle quantity product-qty">x<%=
                                                                productItem.Quantity %></span>
                                                    </td>

                                                    <td>
                                                        <span class="price last "
                                                            id="tPrice_<%= productItem.productId._id %>">
                                                            <% if (productItem.offer && productItem.offer.percentage> 0)
                                                                { %>
                                                                <% var Price=productItem.productId.price * (1 -
                                                                    productItem.offer.percentage / 100) *
                                                                    productItem.Quantity; %>
                                                                    <span>₹<%= Price.toFixed(2) %>.00</span>
                                                                    <% } else { %>
                                                                        ₹<%= productItem.productId.price *
                                                                            productItem.Quantity %>.00

                                                                            <% } %>
                                                        </span>
                                                    </td>
                                        </tr>
                                        <% }); %>
                                            <% } else{%>

                                                <%}%>

                                                    <tr>
                                                        <th>Coupen</th>
                                                        <td><span id="coupondata" style="display: none;"></span></td>
                                                        <td><a href="#">Coupon <span id="couponValue">-0</span></a></td>
                                                    </tr>
                                                    <tr>
                                                        <th>Shipping</th>
                                                        <td colspan="2"><em>Free Shipping</em></td>
                                                    </tr>
                                                    <tr>
                                                        <th>Total</th>
                                                        <td id="fullTotal" colspan="2"><em><a href="#"> <span
                                                                        id="totalSum"></span></em></a></td>

                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <button id="removeCouponBtn"
                                                                style="display: none; background-color: red; border: none;"
                                                                onclick="removeAppliedCoupon()">Remove</button>
                                                        </td>
                                                    </tr>

                                    </tbody>
                                </table>
                            </div>
                            <div class="payment_method">
                                <div class="mb-25">
                                    <h5>Payment</h5>
                                </div>
                                <div class="payment_option">
                                    <div class="custome-radio payment_item ">
                                        <div class="radion_btn">
                                            <input class="form-check-input" type="radio" id="f-option5" name="pay"
                                                value="wallet" checked>
                                            <label class="form-check-label" for="f-option5">Wallet</label>
                                            <div class="check"></div>
                                        </div>
                                    </div>
                                    <div class="custome-radio payment_item active">
                                        <div class="radion_btn">
                                            <input class="form-check-input" type="radio" id="f-option6" name="pay"
                                                value="Cash on delevery">
                                            <label class="form-check-label" for="f-option6">Cash on delivery</label>
                                            <div class="check"></div>
                                        </div>
                                    </div>
                                    <div class="custome-radio payment_item active">
                                        <div class="radion_btn">
                                            <input class="form-check-input" type="radio" id="f-option7" name="pay"
                                                value="paypal">
                                            <label class="form-check-label" for="f-option7">online</label>
                                            <div class="check"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button id="proceedToPayButton" class="btn">
                                <% if (cartData && cartData.product && cartData.product.length> 0) { %>
                                    <a class="btn primary-btn text-decoration-none" href="#"
                                        id="proceedToPaypal">Proceed to Pay</a>
                                    <% } else { %>
                                        <button class="btn primary-btn disabled" disabled>Proceed to Pay</button>
                                        <% } %>
                            </button>
                        </div>
                        <a href="/payment-policy">Payment Policy</a>
                    </div>
                </div>

            </div>
            </div>

        </section>

    </main>
    <footer class="main">
        <section class="newsletter p-30 text-white wow fadeIn animated">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-7 mb-md-3 mb-lg-0">
                        <div class="row align-items-center">
                            <div class="col flex-horizontal-center">
                                <img class="icon-email" src="assets/imgs/theme/icons/icon-email.svg" alt="">
                                <h4 class="font-size-20 mb-0 ml-3">Sign up to Newsletter</h4>
                            </div>
                            <div class="col my-4 my-md-0 des">
                                <h5 class="font-size-15 ml-4 mb-0">...and receive <strong>$25 coupon for first
                                        shopping.</strong></h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <!-- Subscribe Form -->
                        <form class="form-subcriber d-flex wow fadeIn animated">
                            <input type="email" class="form-control bg-white font-small" placeholder="Enter your email">
                            <button class="btn bg-dark text-white" type="submit">Subscribe</button>
                        </form>
                        <!-- End Subscribe Form -->
                    </div>
                </div>
            </div>
        </section>
        <section class="section-padding footer-mid" style="background-color: white;">
            <div class="container pt-15 pb-20">
                <div class="row">
                    <div class="col-lg-4 col-md-6">
                        <div class="widget-about font-md mb-md-5 mb-lg-0">
                            <div class="logo logo-width-1 wow fadeIn animated">
                                <a href="index.html"><img src="assets/imgs/theme/icons/homelogo.jpeg" alt="logo"></a>
                            </div>
                            <h5 class="mt-20 mb-10 fw-600 text-grey-4 wow fadeIn animated">Contact</h5>

                            <p class="wow fadeIn animated">
                                <strong>Phone: </strong>+01 2222 365 /(+91) 01 2345 6789
                            </p>
                            <p class="wow fadeIn animated">
                                <strong>Hours: </strong>10:00 - 18:00, Mon - Sat
                            </p>

                        </div>
                    </div>
                    <div class="col-lg-2 col-md-3">
                        <h5 class="widget-title wow fadeIn animated">About</h5>
                        <ul class="footer-list wow fadeIn animated mb-sm-5 mb-md-0">
                            <li><a href="#">About Us</a></li>
                            <li><a href="#">Delivery Information</a></li>
                            <li><a href="#">Privacy Policy</a></li>
                            <li><a href="#">Terms &amp; Conditions</a></li>
                            <li><a href="#">Contact Us</a></li>
                            <li><a href="#">Support Center</a></li>
                        </ul>
                    </div>
                    <div class="col-lg-2  col-md-3">
                        <h5 class="widget-title wow fadeIn animated">My Account</h5>
                        <ul class="footer-list wow fadeIn animated">
                            <li><a href="#">Sign In</a></li>
                            <li><a href="#">View Cart</a></li>
                            <li><a href="#">My Wishlist</a></li>
                            <li><a href="#">Track My Order</a></li>
                            <li><a href="#">Help</a></li>
                            <li><a href="#">Order</a></li>
                        </ul>
                    </div>
                    <div class="col-lg-4">
                        <h5 class="mb-10 mt-30 fw-600 text-grey-4 wow fadeIn animated">Follow Us</h5>
                        <div class="mobile-social-icon wow fadeIn animated mb-sm-5 mb-md-0">
                            <a href="#"><img src="assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                            <a href="#"><img src="assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                            <a href="#"><img src="assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                            <a href="#"><img src="assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                            <a href="#"><img src="assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <div class="container pb-20 wow fadeIn animated">
            <div class="row">
                <div class="col-12 mb-20">
                    <div class="footer-bottom"></div>
                </div>
                <div class="col-lg-6">
                    <p class="float-md-left font-sm text-muted mb-0">&copy; 2024, <strong
                            class="text-brand">Booktore</strong> - online book shop </p>
                </div>
                <div class="col-lg-6">
                    <p class="text-lg-end text-start font-sm text-muted mb-0">
                        Designed by <a href="http://alithemes.com/" target="_blank">bookstore.com</a>. All rights
                        reserved
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="text-center">
                    <h5 class="mb-5">Now Loading</h5>
                    <div class="loader">
                        <div class="bar bar1"></div>
                        <div class="bar bar2"></div>
                        <div class="bar bar3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"
        integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
        crossorigin="anonymous"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const showModalButton = document.getElementById("showModal");
            const blankModal = document.getElementById("blankModal");
            const closeModalButton = document.getElementById("closeModal");

            showModalButton.addEventListener("click", function (event) {
                event.preventDefault();
                blankModal.style.display = "block";
            });

            closeModalButton.addEventListener("click", function () {
                blankModal.style.display = "none";
            });
        });

    </script>
    <script>
        document.getElementById('showAllAddressesButton').addEventListener('click', function () {
            const hiddenForms = document.querySelectorAll('.hidden');
            hiddenForms.forEach(form => {
                form.classList.remove('hidden');
            });
            this.style.display = 'none';
        });
    </script>
    <script>
        const radioButtons = document.querySelectorAll('input[type="radio"][name="payment"]');
        radioButtons.forEach(radioButton => {
            radioButton.addEventListener('change', (event) => {
                if (event.target.checked) {
                    radioButtons.forEach(rb => {
                        if (rb !== event.target) {
                            rb.checked = false;
                        }
                    });
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const forms = document.querySelectorAll('[id^="addressForm"]');
            forms.forEach(form => {
                form.addEventListener('submit', event => {
                    event.preventDefault();
                    const selectedAddressIndex = form.querySelector('input[name="payment"]:checked').value;
                    console.log("Selected Address Index:", selectedAddressIndex);
                });
            });
        });
    </script>
    <script>
        document.getElementById('toggleFormButton').addEventListener('click', function () {
            const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
            modal.toggle();
        });

        function validateForm() {
            const firstName = document.getElementById('first').value;
            const lastName = document.getElementById('last').value;
            const city = document.getElementById('city').value;
            const district = document.getElementById('district').value;
            const state = document.getElementById('state').value;
            const pincode = document.getElementById('zip').value;

            const nameRegex = /^[A-Za-z]+$/;
            const pincodeRegex = /^\d{6}$/;

            if (!nameRegex.test(firstName)) {
                showError('firstError', 'First name should contain only letters');
                return false;
            } else {
                hideError('firstError');
            }

            if (!nameRegex.test(lastName)) {
                showError('lastError', 'Last name should contain only letters');
                return false;
            } else {
                hideError('lastError');
            }

            if (!nameRegex.test(city)) {
                showError('cityError', 'City should contain only letters');
                return false;
            } else {
                hideError('cityError');
            }

            if (!nameRegex.test(district)) {
                showError('districtError', 'District should contain only letters');
                return false;
            } else {
                hideError('districtError');
            }

            if (!nameRegex.test(state)) {
                showError('stateError', 'State should contain only letters');
                return false;
            } else {
                hideError('stateError');
            }

            if (!pincodeRegex.test(pincode)) {
                showError('pincodeError', 'Pincode should be a 6-digit number');
                return false;
            } else {
                hideError('pincodeError');
            }

            return true;
        }

        function showError(id, message) {
            const errorElement = document.getElementById(id);
            errorElement.innerText = message;
            errorElement.classList.add('error-message');
        }

        function hideError(id) {
            const errorElement = document.getElementById(id);
            errorElement.innerText = '';
            errorElement.classList.remove('error-message');
        }
    </script>
    <script>
        removeAppliedCoupon()
        function calculateTotalSum() {
            const tPriceElements = document.querySelectorAll('[id^="tPrice_"]');
            let totalSum = 0;
            tPriceElements.forEach(element => {
                const priceText = element.textContent.replace('₹', '');
                const price = parseFloat(priceText); // 
                totalSum += price;
            });
            return totalSum.toFixed(2);
        }

        function displayTotalSum(total) {
            const totalSumElement = document.getElementById('totalSum');
            if (totalSumElement) {
                totalSumElement.textContent = total;
            }
        }
        function checkCouponData() {
            const storedCouponCode = localStorage.getItem('couponCode');
            const couponDataElement = document.getElementById('coupondata');
            if (storedCouponCode && couponDataElement) {
                couponDataElement.textContent = storedCouponCode;
            }
        }

        checkCouponData();

        function removeAppliedCoupon() {
            const storedCouponCode = localStorage.getItem('couponCode');

            if (storedCouponCode) {
                localStorage.removeItem('couponCode');
                localStorage.removeItem('couponValue');

                const couponValueElement = document.getElementById('couponValue');
                if (couponValueElement) {
                    couponValueElement.textContent = '';
                }

                const couponDataElement = document.getElementById('coupondata');
                if (couponDataElement) {
                    couponDataElement.textContent = '';
                }

                const initialTotalAmount = calculateTotalSum();
                displayTotalSum(initialTotalAmount);


                Swal.fire({
                    title: 'Coupon Removed!',
                    text: 'The applied coupon has been removed.',
                    icon: 'success',
                    showCancelButton: false,
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload();
                    }
                });
            }
        }

        function displayRemoveCouponButton() {
            const storedCouponValue = localStorage.getItem('couponValue');
            const removeCouponBtn = document.getElementById('removeCouponBtn');
            if (storedCouponValue && removeCouponBtn) {
                removeCouponBtn.style.display = 'inline-block';
            } else {
                removeCouponBtn.style.display = 'none';
            }
        }

        displayRemoveCouponButton();


        function applyCoupon() {
            const couponCode = document.getElementById('couponInput').value;
            let totalAmount = parseFloat(calculateTotalSum());

            fetch('/applycoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    couponcode: couponCode,
                    totalAmount: totalAmount
                }),
            })
                .then(response => {
                    if (response.status === 200) {
                        return response.json();
                    } else {
                        throw new Error('Network response was not ok');
                    }
                })
                .then(data => {
                    if (data.message === 'Success') {
                        const couponValueElement = document.getElementById('couponValue');
                        if (couponValueElement) {
                            couponValueElement.textContent = `-${data.Discount}`;
                        }

                        const couponDataElement = document.getElementById('coupondata');
                        if (couponDataElement) {
                            couponDataElement.textContent = couponCode;
                        }

                        totalAmount -= data.Discount;
                        displayTotalSum(totalAmount.toFixed(2));
                        displayRemoveCouponButton();

                        Swal.fire({
                            title: 'Success!',
                            text: 'Coupon applied successfully!',
                            icon: 'success',
                            showCancelButton: false,
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                displayRemoveCouponButton();
                            }
                        });

                        localStorage.setItem('couponValue', data.Discount);
                        localStorage.setItem('totalAmount', totalAmount.toFixed(2));
                        localStorage.setItem('couponCode', couponCode);
                    } else {
                        Swal.fire('Error!', data.message || 'Failed to apply coupon.', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', 'Coupon is not applicable for this product or Coupon limit exceeded.', 'error');
                });
        }
        const storedCouponValue = localStorage.getItem('couponValue');
        const storedTotalAmount = localStorage.getItem('totalAmount');
        if (storedCouponValue && storedTotalAmount) {
            const couponValueElement = document.getElementById('couponValue');
            if (couponValueElement) {
                couponValueElement.textContent = `-${storedCouponValue}`;
            }
            displayTotalSum(storedTotalAmount);
        } else {
            displayTotalSum(calculateTotalSum());
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
        document.getElementById('proceedToPayButton').addEventListener('click', function (event) {
            const selectedAddressIndex = document.querySelector('input[name="payment"]:checked');
            console.log("In ejs");
            if (!selectedAddressIndex) {
                Swal.fire({
                    title: 'No Address Selected',
                    text: 'Please select an address to proceed.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            const userId = document.getElementById(`userId${selectedAddressIndex.value}`).value;
            const paymentMethod = document.querySelector('input[name="pay"]:checked').value;
            const totalSumElement = document.getElementById('totalSum');
            const totalAmount = parseFloat(totalSumElement.textContent);
            Swal.fire({
                title: 'Are you sure you want to proceed?',
                text: `Total amount: ₹${totalAmount}. Payment method: ${paymentMethod}`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Proceed',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log("In razor");
                    let rzp1;
                    function initiatePayment(orderId, paymentStatus) {
                        let order = JSON.stringify(orderId);
                        console.log(order);
                        var options = {
                            "key": "rzp_test_r3vMR559p6z5tE",
                            "amount": Math.ceil(order.amount),
                            "currency": "INR",
                            "name": "Companion Bags",
                            "description": "Test Transaction",
                            "order_id": orderId.id,
                            "handler": function (response) {
                                console.log("Finall");
                                afterPaymentSuccess();
                            },
                            "theme": {
                                "color": "#3399cc"
                            }
                        };

                        rzp1 = new Razorpay(options);

                        rzp1.on('payment.failed', function (response) {
                            console.log("fail");
                            alert(response.error.code);


                            window.location.reload();
                        });

                        rzp1.open();
                    }
                    if (paymentMethod === 'paypal') {

                        const requestOptions = {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                amount: totalAmount
                            })
                        };

                        fetch('/onlinepayment', requestOptions)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(`HTTP error! Status: ${response.status}`);
                                } else {
                                    console.log("Response issue");
                                    return response.json();

                                }

                            })
                            .then(data => {
                                if (data.message == 'Order placed successfully.') {
                                    console.log(data.razorOrderId)
                                    const orderId = data.razorOrderId;
                                    const paymentStatus = data.paymentStatus;
                                    initiatePayment(orderId, paymentStatus);
                                } else {
                                    Swal.fire({
                                        title: 'Error!',
                                        html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }

                            })
                            .catch(error => {
                                console.error("Fetch error:", error);
                            });
                    } else if (paymentMethod === 'wallet') {
                        const walletOption = {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                amount: totalAmount
                            })
                        };

                        fetch('/walletpayment', walletOption)
                            .then(response => {
                                return response.json()

                            }).then(data => {
                                if (data.message == "success") {
                                    afterPaymentSuccess()
                                } else if (data.message == "failed") {
                                    Swal.fire({
                                        title: 'Insufficient Wallet Balance',
                                        text: 'You do not have enough money in your wallet.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    })
                                } else {
                                    Swal.fire({
                                        title: 'Error!',
                                        html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })

                            .catch(error => {
                                console.log(error);
                            });
                    } else if (paymentMethod === 'Cash on delevery') {
                        if (totalAmount > 1000) {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Cash on Delivery is not possible for orders above Rs.1000.Please select another payment option .',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        } else {
                            afterPaymentSuccess()

                        }
                    }

                }
            })
            function afterPaymentSuccess() {
                const couponData = document.getElementById('coupondata').textContent.trim();

                fetch('/proceedtoPayment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        address: userId,
                        paymentMethod: paymentMethod,
                        totalAmount: totalAmount,
                        couponData: couponData
                    })
                })
                    .then(response => {
                        if (response.ok) {
                            removeAppliedCoupon();
                            return response.json();
                        } else {
                            throw new Error('Failed to place the order. Please try again later.');
                        }
                    })
                    .then(data => {
                        if (data && data.message === 'Out of stock') {
                            Swal.fire({
                                title: 'Error!',
                                html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        } else if (data && data.message === 'Order placed successfully') {
                            Swal.fire({
                                title: 'Order Placed!',
                                text: 'Your order has been successfully placed.',
                                icon: 'success',
                                showCancelButton: true,
                                showConfirmButton: true,
                                cancelButtonText: 'Continue Shopping',
                                confirmButtonText: 'View Order'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    if (couponData) {
                                        fetch('/couponCheck', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify({
                                                couponData: couponData
                                            }),
                                        })
                                            .then(response => {
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                            });
                                    }

                                    window.location.href = '/account';
                                } else if (result.dismiss === Swal.DismissReason.cancel) {
                                    if (couponData) {
                                        fetch('/couponCheck', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify({
                                                couponData: couponData
                                            }),
                                        })
                                            .then(response => {
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                            });
                                    }

                                    window.location.href = '/home';
                                }
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error!', 'Failed to place the order. Please try again later.', 'error');
                    });
            }
        })
    </script>
    <!-- <script>
        function calculateTotalSum() {
            const tPriceElements = document.querySelectorAll('[id^="tPrice_"]');
            let totalSum = 0;
            tPriceElements.forEach(element => {
                const priceText = element.textContent.replace('₹', ''); 
                const price = parseFloat(priceText); // 
                totalSum += price;
            });
            return totalSum.toFixed(2); 
        }
    
        function displayTotalSum(total) {
        const totalSumElement = document.getElementById('totalSum');
        if (totalSumElement) {
            totalSumElement.textContent = total;
        }
        }
        
        displayTotalSum(calculateTotalSum());
        
</script>  
<script>
    removeAppliedCoupon()
    function calculateTotalSum() {
        const tPriceElements = document.querySelectorAll('[id^="tPrice_"]');
        let totalSum = 0;
        tPriceElements.forEach(element => {
            const priceText = element.textContent.replace('₹', ''); 
            const price = parseFloat(priceText); // 
            totalSum += price;
        });
        return totalSum.toFixed(2); 
    }

    function displayTotalSum(total) {
    const totalSumElement = document.getElementById('totalSum');
    if (totalSumElement) {
        totalSumElement.textContent = total;
    }
    }
    function checkCouponData() {       
    const storedCouponCode = localStorage.getItem('couponCode');
    const couponDataElement = document.getElementById('coupondata');
    if (storedCouponCode && couponDataElement) {
    couponDataElement.textContent = storedCouponCode;
    }
    }

    checkCouponData();

    function removeAppliedCoupon() {
    const storedCouponCode = localStorage.getItem('couponCode');

    if (storedCouponCode) {
    localStorage.removeItem('couponCode'); 
    localStorage.removeItem('couponValue'); 

    const couponValueElement = document.getElementById('couponValue');
    if (couponValueElement) {
    couponValueElement.textContent = '';
    }

    const couponDataElement = document.getElementById('coupondata');
    if (couponDataElement) {
    couponDataElement.textContent = ''; 
    }

    const initialTotalAmount = calculateTotalSum(); 
    displayTotalSum(initialTotalAmount);


    Swal.fire({
    title: 'Coupon Removed!',
    text: 'The applied coupon has been removed.',
    icon: 'success',
    showCancelButton: false,
    confirmButtonText: 'OK'
    }).then((result) => {
    if (result.isConfirmed) {
    location.reload(); 
    }
    });
    }
    }

    function displayRemoveCouponButton() {
    const storedCouponValue = localStorage.getItem('couponValue');
    const removeCouponBtn = document.getElementById('removeCouponBtn');
    if (storedCouponValue && removeCouponBtn) {
    removeCouponBtn.style.display = 'inline-block';
    } else {
    removeCouponBtn.style.display = 'none';
    }
    }

    displayRemoveCouponButton();

    
    function applyCoupon() {
    const couponCode = document.getElementById('couponInput').value;
    let totalAmount = parseFloat(calculateTotalSum());

    fetch('/applycoupon', {
    method: 'POST',
    headers: {
    'Content-Type': 'application/json',
    },
    body: JSON.stringify({ 
    couponcode: couponCode,
    totalAmount: totalAmount
    }),
    })
    .then(response => {
    if (response.status === 200) {
    return response.json();
    } else {
    throw new Error('Network response was not ok');
    }
    })
    .then(data => {
    if (data.message === 'Success') {
    const couponValueElement = document.getElementById('couponValue');
    if (couponValueElement) {
    couponValueElement.textContent = `-${data.Discount}`;
    }

    const couponDataElement = document.getElementById('coupondata');
    if (couponDataElement) {
    couponDataElement.textContent = couponCode; 
    }

    totalAmount -= data.Discount; 
    displayTotalSum(totalAmount.toFixed(2)); 
    displayRemoveCouponButton();

    Swal.fire({
    title: 'Success!',
    text: 'Coupon applied successfully!',
    icon: 'success',
    showCancelButton: false,
    confirmButtonText: 'OK'
    }).then((result) => {
    if (result.isConfirmed) {
    displayRemoveCouponButton();
    }
    });

    localStorage.setItem('couponValue', data.Discount);
    localStorage.setItem('totalAmount', totalAmount.toFixed(2));
    localStorage.setItem('couponCode', couponCode); 
    } else {
    Swal.fire('Error!', data.message || 'Failed to apply coupon.', 'error');
    }
    })
    .catch(error => {
    console.error('Error:', error);
    Swal.fire('Error!', 'Coupon is not applicable for this product or Coupon limit exceeded.', 'error');
    });
    }
    const storedCouponValue = localStorage.getItem('couponValue');
    const storedTotalAmount = localStorage.getItem('totalAmount');
    if (storedCouponValue && storedTotalAmount) {
    const couponValueElement = document.getElementById('couponValue');
    if (couponValueElement) {
    couponValueElement.textContent = `-${storedCouponValue}`;
    }
    displayTotalSum(storedTotalAmount);
    } else {
    displayTotalSum(calculateTotalSum());
    }
</script>    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
        document.getElementById('proceedToPayButton').addEventListener('click', function(event) {
            const selectedAddressIndex = document.querySelector('input[name="payment"]:checked');
            console.log("In ejs");
            if (!selectedAddressIndex) {
                Swal.fire({
                    title: 'No Address Selected',
                    text: 'Please select an address to proceed.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            const userId = document.getElementById(`userId${selectedAddressIndex.value}`).value;
            const paymentMethod = document.querySelector('input[name="pay"]:checked').value;
            const totalSumElement = document.getElementById('totalSum');
            const totalAmount = parseFloat(totalSumElement.textContent);
            Swal.fire({
                title: 'Are you sure you want to proceed?',
                text: `Total amount: ₹${totalAmount}. Payment method: ${paymentMethod}`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Proceed',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    console.log("In razor");
                    let rzp1;
                function initiatePayment(orderId, paymentStatus) {             
                    let order = JSON.stringify(orderId);
                    console.log(order);
                    var options = {
                        "key": "rzp_test_C2ySOsHK5SbjQ0",
                        "amount": Math.ceil(order.amount),
                        "currency": "INR",
                        "name": "Companion Bags",
                        "description": "Test Transaction",
                        "order_id": orderId.id,
                        "handler": function (response) {
                            console.log("Finall");
                            afterPaymentSuccess();
                        },
                        "theme": {
                            "color": "#3399cc"
                        }
                    };

                   
                }
             if(paymentMethod === 'Cash on delevery'){
                            afterPaymentSuccess()
                        }
                
                }
            })
            function afterPaymentSuccess() {

        fetch('/proceedtoPayment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                address: userId,
                paymentMethod: paymentMethod,
                totalAmount: totalAmount,
            })
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Failed to place the order. Please try again later.');
            }
        })
        .then(data => {
            if(data && data.message === 'Out of stock'){
                Swal.fire({
                    title: 'Error!',
                    html: `<p>The book <strong>${data.product}</strong> is out of stock.</p>`,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }else if (data && data.message === 'Order placed successfully') {
                Swal.fire({
                    title: 'Order Placed!',
                    text: 'Your order has been successfully placed.',
                    icon: 'success',
                    showCancelButton: true,
                    showConfirmButton: true,
                    cancelButtonText: 'Continue Shopping',
                    confirmButtonText: 'Ok'
                }).then((result) => {
                    if (result.isConfirmed) {
                        if (couponData) {
                            fetch('/couponCheck', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    couponData: couponData
                                }),
                            })
                            .then(response => {
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                        }

                        window.location.href = '/account';
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                       

                        window.location.href = '/';
                    }
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire('Error!', 'Failed to place the order. Please try again later.', 'error');
        });
    }
        })
    </script> 
     -->

    <!-- Vendor JS-->
    <script src="assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="assets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="assets/js/plugins/slick.js"></script>
    <script src="assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="assets/js/plugins/wow.js"></script>
    <script src="assets/js/plugins/jquery-ui.js"></script>
    <script src="assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="assets/js/plugins/magnific-popup.js"></script>
    <script src="assets/js/plugins/select2.min.js"></script>
    <script src="assets/js/plugins/waypoints.js"></script>
    <script src="assets/js/plugins/counterup.js"></script>
    <script src="assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="assets/js/plugins/images-loaded.js"></script>
    <script src="assets/js/plugins/isotope.js"></script>
    <script src="assets/js/plugins/scrollup.js"></script>
    <script src="assets/js/plugins/jquery.vticker-min.js"></script>
    <!-- Template  JS -->
    <script src="assets/js/maind134.js?v=3.4"></script>
    <script src="assets/js/shopd134.js?v=3.4"></script>
    </body>


    <!-- Mirrored from wp.alithemes.com/html/evara/evara-frontend/shop-checkout.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jul 2023 10:10:07 GMT -->

    </html>